name: "Pull Request"

on: [pull_request]

concurrency: ${{ github.workflow }}-${{ github.ref }}

env:
    NODE_VERSION: 22.14.0
    PNPM_VERSION: 10.4.1

jobs:
    format:
        name: "Format"
        if: github.repository == 'buildzaku/zaku'
        runs-on: ubuntu-latest
        steps:
            - name: "Checkout repository"
              uses: actions/checkout@v4

            - name: "Setup pnpm"
              uses: pnpm/action-setup@v4
              with:
                  version: ${{ env.PNPM_VERSION }}

            - name: "Setup Node.js"
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: pnpm

            - name: "Get pnpm store directory"
              id: pnpm_cache
              shell: bash
              run: echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT

            - name: "Setup pnpm cache"
              uses: actions/cache@v4
              with:
                  path: ${{ steps.pnpm_cache.outputs.pnpm_cache_dir }}
                  key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: ${{ runner.os }}-pnpm-store-

            - name: "Install frontend dependencies"
              run: pnpm install

            - name: "Check format"
              run: pnpm run format-check

    lint:
        name: "Lint"
        if: github.repository == 'buildzaku/zaku'
        runs-on: ubuntu-latest
        steps:
            - name: "Checkout repository"
              uses: actions/checkout@v4

            - name: "Setup pnpm"
              uses: pnpm/action-setup@v4
              with:
                  version: ${{ env.PNPM_VERSION }}

            - name: "Setup Node.js"
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: pnpm

            - name: "Get pnpm store directory"
              id: pnpm_cache
              shell: bash
              run: echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT

            - name: "Setup pnpm cache"
              uses: actions/cache@v4
              with:
                  path: ${{ steps.pnpm_cache.outputs.pnpm_cache_dir }}
                  key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: ${{ runner.os }}-pnpm-store-

            - name: "Install frontend dependencies"
              run: pnpm install

            - name: "Check lint"
              run: pnpm run lint

    build:
        name: "Build"
        if: github.repository == 'buildzaku/zaku'
        strategy:
            fail-fast: false
            matrix:
                include:
                    - platform: "macos-latest"
                      args: "--ci --verbose --bundles dmg --target aarch64-apple-darwin"
                    - platform: "macos-latest"
                      args: "--ci --verbose --bundles dmg --target x86_64-apple-darwin"
                    - platform: "ubuntu-latest"
                      args: "--ci --verbose --bundles deb"
                    - platform: "windows-latest"
                      args: "--ci --verbose --bundles msi"
        runs-on: ${{ matrix.platform }}
        steps:
            - name: "Checkout repository"
              uses: actions/checkout@v4

            - name: "Setup pnpm"
              uses: pnpm/action-setup@v4
              with:
                  version: ${{ env.PNPM_VERSION }}

            - name: "Setup Node.js"
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: pnpm

            - name: "Get pnpm store directory"
              id: pnpm_cache
              shell: bash
              run: echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT

            - name: "Setup pnpm cache"
              uses: actions/cache@v4
              with:
                  path: ${{ steps.pnpm_cache.outputs.pnpm_cache_dir }}
                  key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: ${{ runner.os }}-pnpm-store-

            - name: "Setup Rust"
              uses: dtolnay/rust-toolchain@stable
              with:
                  targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

            - name: "Setup Rust cache"
              uses: swatinem/rust-cache@v2
              with:
                  workspaces: "./src-tauri -> target"

            - name: "Install system dependencies (Ubuntu only)"
              if: matrix.platform == 'ubuntu-latest'
              run: |
                  sudo apt-get update
                  sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf libasound2-dev

            - name: "Install frontend dependencies"
              run: pnpm install

            - name: "Build application"
              uses: tauri-apps/tauri-action@v0
              with:
                  args: ${{ matrix.args }}
